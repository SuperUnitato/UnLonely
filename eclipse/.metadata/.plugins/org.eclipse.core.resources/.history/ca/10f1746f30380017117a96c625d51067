package com.SuperUnitato.UnLonely.packets;

import com.SuperUnitato.UnLonely.playerdata.IMoney;
import com.SuperUnitato.UnLonely.playerdata.MoneyProvider;

import init.ModItems;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.item.ItemStack;
import net.minecraftforge.fml.common.network.simpleimpl.IMessage;
import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;
import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;

public class messageHandler implements IMessageHandler<packetHandler, IMessage>{
	
	private int inventorySlots = 35;
	
	ItemStack one = new ItemStack(ModItems.onedollar);
	ItemStack five = new ItemStack(ModItems.fivedollar);
	ItemStack ten = new ItemStack(ModItems.tendollar);
	ItemStack twenty = new ItemStack(ModItems.twentydollar);
	ItemStack fifty = new ItemStack(ModItems.fiftydollar);
	ItemStack onehundred = new ItemStack(ModItems.onehundreddollar);
	
	 

	@Override
	public IMessage onMessage(packetHandler message, MessageContext ctx) {
		
		EntityPlayerMP serverPlayer = ctx.getServerHandler().playerEntity;
		IMoney money = serverPlayer.getCapability(MoneyProvider.MONEY_CAP, null);
		int ID = message.toSend;
		
		switch(ID){
			//deposits
			case 0:
				if(serverPlayer.inventory.hasItemStack(one)){
					for(int i = 0; i < inventorySlots; i++){
						if(serverPlayer.inventory.getStackInSlot(i) == one){
							money.addBalance(1);
							serverPlayer.inventory.removeStackFromSlot(i);
						}
					}
				} else {
					Minecraft.getMinecraft().player.sendChatMessage("You dont have a 1");
				}
				break;
				
			case 1:
				if(serverPlayer.inventory.hasItemStack(five)){
					for(int i = 0; i < inventorySlots; i++){
						if(serverPlayer.inventory.getStackInSlot(i) == five){
							money.addBalance(5);
							serverPlayer.inventory.removeStackFromSlot(i);
						}
					}
				} else {
					Minecraft.getMinecraft().player.sendChatMessage("You dont have a 5");
				}
				
				break;
			
			case 2:
				if(serverPlayer.inventory.hasItemStack(ten)){
					for(int i = 0; i < inventorySlots; i++){
						if(serverPlayer.inventory.getStackInSlot(i) == ten){
							money.addBalance(10);
							serverPlayer.inventory.removeStackFromSlot(i);
						}
					}
				} else {
					Minecraft.getMinecraft().player.sendChatMessage("You dont have a 10");
				}
				break;
				
			case 3:
				if(serverPlayer.inventory.hasItemStack(twenty)){
					for(int i = 0; i < inventorySlots; i++){
						if(serverPlayer.inventory.getStackInSlot(i) == twenty){
							money.addBalance(20);
							serverPlayer.inventory.removeStackFromSlot(i);
						}
					}
				} else {
					Minecraft.getMinecraft().player.sendChatMessage("You dont have a 20");
				}
				break;
				
			case 4:
				if(serverPlayer.inventory.hasItemStack(fifty)){
					for(int i = 0; i < inventorySlots; i++){
						if(serverPlayer.inventory.getStackInSlot(i) == fifty){
							serverPlayer.inventory.removeStackFromSlot(i);
						}
					}
				} else {
					Minecraft.getMinecraft().player.sendChatMessage(serverPlayer.getName() +" Is Out of funds");
				}
				break;
				
			case 5:
				if(serverPlayer.inventory.hasItemStack(onehundred)){
					for(int i = 0; i < inventorySlots; i++){
						if(serverPlayer.inventory.getStackInSlot(i) == onehundred){
							serverPlayer.inventory.removeStackFromSlot(i);
						}
					}
				} else {
					Minecraft.getMinecraft().player.sendChatMessage(serverPlayer.getName() +" Is Out of funds");
				}
				break;
				
			//withdrawls
			case 6:
				
				serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.onedollar, 1));
				break;
				
			case 7:
				
				serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.fivedollar, 1));
				break;
				
			case 8:
				
				serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.tendollar, 1));
				break;
				
			case 9:
				
				serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.twentydollar, 1));
				break;
				
			case 10:
				
				serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.fiftydollar, 1));
				break;
				
			case 11:
				
				serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.onehundreddollar, 1));
				break;
		}
		serverPlayer.inventory.addItemStackToInventory(new ItemStack(ModItems.onedollar, 1));
		return null;
	}
	
	

}
